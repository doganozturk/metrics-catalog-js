class t{constructor(t){if(this.options=t,!t||"object"!=typeof t||"string"!=typeof t.host||!t.host||!t.host.trim().length)throw new Error("You must provide a valid host option!")}init(){window.addEventListener("load",()=>{setTimeout(()=>{const e=this.collectMetrics();t.postMetrics(e)},500)})}static getNavigationMetrics(){const t=window.performance.getEntriesByType("navigation")[0];return{ttfb:t.responseStart-t.requestStart,domContentLoaded:t.domContentLoadedEventEnd-t.domContentLoadedEventStart,windowLoaded:t.loadEventEnd-t.loadEventStart}}static getResourceMetrics(){return{resources:window.performance.getEntriesByType("resource").map(t=>({name:t.name,requestStart:t.requestStart,responseEnd:t.responseEnd,startTime:t.startTime}))}}static getPaintMetrics(){return{fcp:window.performance.getEntriesByType("paint").filter(t=>"first-contentful-paint"===t.name)[0].startTime}}collectMetrics(){return Object.assign(Object.assign(Object.assign({host:this.options.host,date:new Date},t.getPaintMetrics()),t.getResourceMetrics()),t.getNavigationMetrics())}static postMetrics(e){return fetch(t.URL,{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(t=>t.json()).then(console.log).catch(t=>console.error(t))}}t.URL="https://metrics-catalog-api.herokuapp.com/metrics";export default t;
